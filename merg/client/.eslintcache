[{"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\index.js":"1","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\App.js":"2","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\ApolloProvider.js":"4","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Login.js":"5","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Home.js":"6","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Register.js":"7","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\MenuBar.js":"8","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\PostCard.js":"9","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\context\\auth.js":"10","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\hooks.js":"11","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\AuthRoute.js":"12","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\PostForm.js":"13","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\graphql.js":"14"},{"size":433,"mtime":1611300990209,"results":"15","hashOfConfig":"16"},{"size":793,"mtime":1611305875908,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":508,"mtime":1611300342492,"results":"19","hashOfConfig":"16"},{"size":2870,"mtime":1611302571710,"results":"20","hashOfConfig":"16"},{"size":1132,"mtime":1611355818983,"results":"21","hashOfConfig":"16"},{"size":3705,"mtime":1611302422763,"results":"22","hashOfConfig":"16"},{"size":1988,"mtime":1611300231528,"results":"23","hashOfConfig":"16"},{"size":1831,"mtime":1611300536865,"results":"24","hashOfConfig":"16"},{"size":1481,"mtime":1611304701539,"results":"25","hashOfConfig":"16"},{"size":473,"mtime":1611302263393,"results":"26","hashOfConfig":"16"},{"size":433,"mtime":1611307552071,"results":"27","hashOfConfig":"16"},{"size":1425,"mtime":1611307350320,"results":"28","hashOfConfig":"16"},{"size":380,"mtime":1611354958435,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"wa8o68",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\index.js",[],["61","62"],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\App.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\ApolloProvider.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Login.js",["63"],"import React, { useContext, useState } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { useMutation } from \"@apollo/react-hooks\"\r\nimport gql from 'graphql-tag'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { useForm } from '../util/hooks'\r\n\r\nfunction Login(props) {\r\n    const context = useContext(AuthContext)\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const initialState = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    }\r\n\r\n    const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n        username: '',\r\n        password: ''\r\n    })\r\n\r\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n        update(_, { data: { login: userData } }) {\r\n            context.login(userData)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n        },\r\n        variables: values\r\n    })\r\n\r\n    function loginUserCallback() {\r\n        loginUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\r\n                <h1>Login</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    error={errors.username ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.Password}\r\n                    error={errors.password ? true : false}\r\n                    onChange={onChange}\r\n                />\r\n                <Button type=\"submit\" primary>\r\n                    Login\r\n                </Button>\r\n                {Object.keys(errors).length > 0 && (\r\n                    <div className=\"ui error message\">\r\n                        <ul className=\"list\">\r\n                            {Object.values(errors).map(value => (\r\n                                <li key={value}>\r\n                                    {value}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LOGIN_USER = gql`\r\nmutation Login(\r\n    $username: String!\r\n    $password: String!\r\n) {\r\n    login(\r\n            username: $username\r\n            password: $password\r\n    ) {\r\n        id \r\n        email \r\n        username \r\n        createdAt\r\n        token\r\n    }\r\n    }\r\n`\r\n\r\nexport default Login","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Home.js",["64"],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\pages\\Register.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\PostCard.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\context\\auth.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\hooks.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\AuthRoute.js",[],"C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\components\\PostForm.js",["65","66"],"import { ValuesOfCorrectTypeRule } from 'graphql'\r\nimport React from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport gql from 'graphql-tag'\r\nimport {useMutation} from '@apollo/react-hooks'\r\n\r\nimport {useForm} from '../util/hooks'\r\n\r\nfunction PostForm() {\r\n    const{values, onChange, onSubmit}=useForm(createPostCallback,{\r\n        body:''\r\n    })\r\n\r\n    const [createPost, {error} ]=useMutation(CREATE_POST_MUTATION,{\r\n        variables:values,\r\n        update(_, result){\r\n            values.body='';\r\n        }\r\n    })\r\n\r\n    function createPostCallback(){\r\n        createPost();\r\n    }\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <h2>Create a post:</h2>\r\n            <Form.Field>\r\n                <Form.Input\r\n                placeholder=\"Hi World!\"\r\n                name=\"body\"\r\n                onChange={onChange}\r\n                value={values.body}\r\n                />\r\n                <Button type=\"submit\" color=\"teal\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Field>\r\n        </Form>\r\n    )\r\n}\r\nconst CREATE_POST_MUTATION=gql`\r\nmutation createPost($body:String!){\r\n    createPost(body:$body){\r\n        id \r\n        body \r\n        createdAt\r\n        likes{\r\n            id username createdAt\r\n        }\r\n        likeCount\r\n        comments{\r\n            id body createdAt\r\n        }\r\n        commentCount\r\n\r\n    }\r\n}\r\n`\r\nexport default PostForm\r\n","C:\\Users\\user\\TTP\\crud-app\\merg\\client\\src\\util\\graphql.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":13,"column":11,"nodeType":"73","messageId":"74","endLine":13,"endColumn":23},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":11},{"ruleId":"71","severity":1,"message":"76","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":33},{"ruleId":"71","severity":1,"message":"77","line":14,"column":25,"nodeType":"73","messageId":"74","endLine":14,"endColumn":30},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'initialState' is assigned a value but never used.","Identifier","unusedVar","'gql' is defined but never used.","'ValuesOfCorrectTypeRule' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]